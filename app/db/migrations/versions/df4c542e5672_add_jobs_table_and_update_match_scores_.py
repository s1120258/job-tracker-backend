"""Add jobs table and update match_scores FK

Revision ID: df4c542e5672
Revises: ea195a0a92a8
Create Date: 2025-07-14 20:55:04.076015

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import pgvector.sqlalchemy
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision: str = 'df4c542e5672'
down_revision: Union[str, None] = 'ea195a0a92a8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('jobs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('company', sa.String(), nullable=False),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('url', sa.String(), nullable=True),
    sa.Column('source', sa.String(), nullable=True),
    sa.Column('date_posted', sa.Date(), nullable=True),
    sa.Column('status', sa.Enum('new', 'saved', 'matched', 'applied', 'rejected', name='jobstatus'), nullable=False),
    sa.Column('match_score', sa.Float(), nullable=True),
    sa.Column('job_embedding', pgvector.sqlalchemy.Vector(dim=1536), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('match_scores', sa.Column('job_id', sa.UUID(), nullable=False))
    op.drop_constraint('match_scores_application_id_key', 'match_scores', type_='unique')
    op.create_unique_constraint(None, 'match_scores', ['job_id'])
    op.drop_constraint('match_scores_application_id_fkey', 'match_scores', type_='foreignkey')
    op.create_foreign_key(None, 'match_scores', 'jobs', ['job_id'], ['id'])
    op.drop_column('match_scores', 'application_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('match_scores', sa.Column('application_id', sa.UUID(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'match_scores', type_='foreignkey')
    op.create_foreign_key('match_scores_application_id_fkey', 'match_scores', 'applications', ['application_id'], ['id'])
    op.drop_constraint(None, 'match_scores', type_='unique')
    op.create_unique_constraint('match_scores_application_id_key', 'match_scores', ['application_id'])
    op.drop_column('match_scores', 'job_id')
    op.drop_table('jobs')
    # ### end Alembic commands ###
